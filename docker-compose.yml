services:
  server:
    image: opensign/opensignserver:main
    volumes:
      - opensign-files:/usr/src/app/files
    expose:
      - 8080
#    ports:
#      - "8080:8080"
    depends_on:
      - mongo
#    env_file: .env.prod
    environment:
      - NODE_ENV=production
      - SERVER_URL=${HOST_URL:-https://localhost:3001}/api/app
      - PUBLIC_URL=${HOST_URL:-https://localhost:3001}
      - MASTER_KEY=${MASTER_KEY:-XnAadwKxxByMr}
      - MONGODB_URI=${MONGODB_URI:-mongodb://mongo:27017/OpenSignDB}
      - PARSE_MOUNT=${PARSE_MOUNT:-/app}
      - SERVER_URL=${SERVER_URL:-https://${DOMAIN}/app}
      - DO_SPACE=${AWS_BUCKET}
      - DO_ENDPOINT=${AWS_ENDPOINT}
      - DO_BASEURL=${AWS_BASEURL}
      - DO_ACCESS_KEY_ID${AWS_ACCESS_KEY_ID}
      - DO_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - DO_REGION=${AWS_REGION}
      - USE_LOCAL=${USE_LOCAL:-TRUE}
      - MAILGUN_API_KEY=${MAILGUN_API_KEY}
      - MAILGUN_DOMAIN=${MAILGUN_DOMAIN}
      - MAILGUN_SENDER=${MAILGUN_SENDER}
      - SMTP_ENABLE=${SMTP_ENABLED:-TRUE}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_USER_EMAIL=${SMTP_USER_EMAIL}
      - SMTP_PASS=${SMTP_PASS}
      - PFX_BASE64=${PFX_BASE64:-./base64.pfx}
      - PASS_PHRASE=${PASS_PHRASE:-opensign}
      - APP_ID=opensign
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.opensign-server.entrypoints=websecure"
      - "traefik.http.routers.opensign-server.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.opensign-server.tls.certresolver=http-challenge"
      - 'traefik.http.routers.opensign-server.middlewares=opensign-server-stripprefix'
      - 'traefik.http.middlewares.opensign-server-stripprefix.stripprefix.prefixes=/api'
    networks:
      - app-network
      - traefik-proxy
  mongo:
    image: mongo:latest
#    container_name: mongo-container
    volumes:
      - data-volume:/data/db
    expose:
      - 27017
#    ports:
#      - "27018:27017"
    networks:
      - app-network
  client:
    image: opensign/opensign:main
#    container_name: OpenSign-container
    depends_on:
      - server
#    env_file: .env.prod
    expose:
      - 3000
#    ports:
#      - "3000:3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.opensign-client.entrypoints=websecure"
      - "traefik.http.routers.opensign-client.rule=Host(`$DOMAIN`)"
      - "traefik.http.routers.opensign-client.tls.certresolver=http-challenge"
    networks:
      - app-network
      - traefik-proxy
#  caddy:
#    image: caddy:latest
#    container_name: caddy-container
#    ports:
#      - "3001:3001"
#      - "80:80"
#      - "443:443"
#      - "443:443/udp"
#    volumes:
#      - ./Caddyfile:/etc/caddy/Caddyfile
#      - caddy_data:/data
#      - caddy_config:/config
#    networks:
#      - app-network
#    environment:
#      - HOST_URL=${HOST_URL:-localhost:3001}
networks:
  app-network:
#    driver: bridge
  traefik-proxy:
    external: true

volumes:
  data-volume:
  web-root:
  opensign-files:
